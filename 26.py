import time
start_time = time.time()
# -------------------------------------------------------

C = 10


def del_d(x):
    div = 1
    s = []
    while True:
        if div // x == 0:
            s.append(div)
            div *= 10
            # s.append(div)
        elif div % x == 0:
            # print("ok")
            return 0
        else:
            div %= x
            # print(div, s)
            if div in s:
                return len(s) - s.index(div)
            # s.append(div)
        # print(s)


d = 6
j = 0
for i in range(2, 1000):
    t = del_d(i)
    if t > d:
        d = t
        j = i
print(j)

# -------------------------------------------------------

print("--- %s seconds ---" % (time.time() - start_time))

"""
Единичная дробь имеет 1 в числителе. Десятичные представления единичных
 дробей со знаменателями от 2 до 10 даны ниже:

1/2	=	0.5
1/3	=	0.(3)
1/4	=	0.25
1/5	=	0.2
1/6	=	0.1(6)
1/7	=	0.(142857)
1/8	=	0.125
1/9	=	0.(1)
1/10	=	0.1
Где 0.1(6) значит 0.166666..., и имеет повторяющуюся последовательность 
из одной цифры. Заметим, что 1/7 имеет повторяющуюся последовательность из 6 цифр.

Найдите значение d < 1000, для которого 1/d в десятичном виде содержит 
самую длинную повторяющуюся последовательность цифр.

Ответ: 983"""