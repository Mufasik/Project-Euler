import time
start_time = time.time()

def polindrom(x):
    t = str(x)
    for c in range(len(t)//2):
        if t[c] != t[len(t)-c-1]:
            return False
    return True

def perevorot(x):
    t = str(x)
    z = ""
    for i in range(len(t)-1,-1,-1):
        z += t[i]
    return int(z)

count = 0
for i in range(11,10000):
# for i in range(349,350):
    z = i
    for j in range(50):
        z += perevorot(z)
        # print(z)
        if polindrom(z):
            break
        if j == 49:
            count += 1

print(count)

print("--- %s seconds ---" % (time.time() - start_time))

# 55
"""
Если взять число 47, перевернуть его и прибавить к исходному, т.е. найти 47 + 74 = 121, получится палиндром.

Не из всех чисел таким образом сразу получается палиндром. К примеру,

349 + 943 = 1292
1292 + 2921 = 4213
4213 + 3124 = 7337

Т.е., понадобилось 3 итерации для того, чтобы превратить число 349 в палиндром.

На удивление, есть такие палиндромы, которые одновременно являются и числами Личрэла; первое такое число - 4994.
дано, что любое число меньше десяти тысяч либо (1) станет палиндромом меньше, чем за 50 итераций

Сколько существует чисел Личрэла меньше десяти тысяч?

ПРИМЕЧАНИЕ: Формулировка задачи была немного изменена 24 апреля 2007 года, чтобы подчеркнуть теоретическую природу чисел Личрэла.

249
"""